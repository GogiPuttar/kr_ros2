name: Notify parent to bump submodule

on:
  push:
    branches: [ ros2_jazzy ]  # <- Edit here
  workflow_dispatch: {}

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare payload
        id: prep
        run: |
          echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY}" >> "$GITHUB_OUTPUT"

      - name: Dispatch to parent (FuturHub) # <- Edit here
        env:
          GH_PARENT_REPO: FuturHandRobotics/FuturHub  # <- Edit here
          GH_TOKEN: ${{ secrets.FUTURHAND_SUBMODULE_UPDATE }}
          SUBMODULE_PATH_IN_PARENT: external/kr_ros2  # <- Edit here
          SHA: ${{ steps.prep.outputs.sha }}
          REPO: ${{ steps.prep.outputs.repo }}
        run: |
          set -Eeuo pipefail

          payload=$(printf '{"event_type":"submodule_update","client_payload":{"submodule_path":"%s","sha":"%s","repo":"%s"}}' \
            "$SUBMODULE_PATH_IN_PARENT" "$SHA" "$REPO")

          echo "::group::Dispatch payload"
          echo "$payload"
          echo "::endgroup::"

          # Send request and capture body + status code
          resp_file="$(mktemp)"
          code=$(curl -sS -o "$resp_file" -w "%{http_code}" -X POST \
            "https://api.github.com/repos/${GH_PARENT_REPO}/dispatches" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d "$payload") || { echo "::error::curl failed to reach GitHub"; cat "$resp_file" || true; exit 1; }

          echo "::group::Response (HTTP $code)"
          # Body may be empty on success (204); still show for transparency
          if [ -s "$resp_file" ]; then cat "$resp_file"; else echo "<empty>"; fi
          echo "::endgroup::"

          case "$code" in
            204)
              echo "::notice title=Repository dispatch accepted::Parent=${GH_PARENT_REPO} path=${SUBMODULE_PATH_IN_PARENT} sha=${SHA}"
              ;;
            401|403)
              echo "::error title=Auth/Scope issue::HTTP $code. The PAT likely lacks access or is expired.
              - Ensure the token is a **fine-grained PAT** granted to **${GH_PARENT_REPO}**
              - Repo permissions: **Contents: Read and write**
              - Secret name is correct in this repo
              - Token not expired / revoked
              See response above for details."
              exit 1
              ;;
            404)
              echo "::error title=Not found / access denied::HTTP 404. Check:
              - GH_PARENT_REPO='${GH_PARENT_REPO}' is correct (owner/repo)
              - PAT has access to that repo (same org/owner, correct repo selection)
              - Repo is not private to a different owner without permission"
              exit 1
              ;;
            422|400)
              echo "::error title=Unprocessable payload::HTTP $code. Likely JSON shape, event_type, or required fields.
              - event_type should match parent workflow: 'submodule_update'
              - client_payload must include: submodule_path, sha, repo
              - Validate quotes/escaping in payload (shown above)"
              exit 1
              ;;
            5*)
              echo "::warning title=GitHub server error::HTTP $code. Transient issueâ€”consider retry/backoff."
              # Optional quick retry (1x):
              sleep 2
              code2=$(curl -sS -o "$resp_file" -w "%{http_code}" -X POST \
                "https://api.github.com/repos/${GH_PARENT_REPO}/dispatches" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "Accept: application/vnd.github+json" \
                -d "$payload")
              echo "::notice::Retry status: $code2"
              if [ "$code2" != "204" ]; then
                echo "::error::Retry failed. See response above."
                exit 1
              fi
              ;;
            *)
              echo "::error title=Unexpected status::HTTP $code. Inspect response above. Visit: https://docs.github.com/rest"
              exit 1
              ;;
          esac