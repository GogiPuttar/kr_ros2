name: Dispatch proof (curl+jq)

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: "owner/repo to dispatch to"
        required: true
        default: FuturHandRobotics/FuturHub
      event_type:
        description: "event_type (ping or submodule_update)"
        required: true
        default: ping
      submodule_path:
        description: "client_payload.submodule_path (optional)"
        required: false
      sha:
        description: "client_payload.sha (optional)"
        required: false
      repo:
        description: "client_payload.repo (optional)"
        required: false

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - name: Build JSON payload with jq (no shell quoting issues)
        env:
          EVENT:  ${{ inputs.event_type }}
          SP:     ${{ inputs.submodule_path }}
          SHA:    ${{ inputs.sha }}
          REPO:   ${{ inputs.repo }}
        run: |
          set -euo pipefail
          if [ "${EVENT}" = "ping" ]; then
            jq -n '{event_type:"ping", client_payload:{}}' > payload.json
          else
            jq -n \
              --arg sp  "${SP:-}" \
              --arg sha "${SHA:-}" \
              --arg rp  "${REPO:-}" \
              '{event_type:"submodule_update", client_payload:{submodule_path:$sp, sha:$sha, repo:$rp}}' > payload.json
          fi
          echo "::group::Payload"
          cat payload.json
          echo
          echo "bytes=$(wc -c < payload.json)"
          echo "::endgroup::"

      - name: Dispatch via curl (JSON, binary-safe)
        env:
          TOKEN:  ${{ secrets.FUTURHAND_SUBMODULE_UPDATE }}   # fine-grained PAT with Contents: RW on target repo
          TARGET: ${{ inputs.target_repo }}
        run: |
          set -euo pipefail
          test -n "${TOKEN:-}" || { echo "::error::Missing FUTURHAND_SUBMODULE_UPDATE secret"; exit 1; }
          resp="$(mktemp)"
          code=$(curl -sS -o "$resp" -w "%{http_code}" -X POST \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --data-binary @payload.json \
            "https://api.github.com/repos/${TARGET}/dispatches")
          echo "::group::Response (HTTP $code)"
          if [ -s "$resp" ]; then cat "$resp"; else echo "<empty>"; fi
          echo "::endgroup::"
          test "$code" = "204" || { echo "::error::Expected 204, got $code"; exit 1; }

      # Optional: also prove with gh api (uses same token)
      - name: Dispatch via gh api (control test)
        env:
          TOKEN:  ${{ secrets.FUTURHAND_SUBMODULE_UPDATE }}
          TARGET: ${{ inputs.target_repo }}
        run: |
          set -euo pipefail
          echo "${TOKEN}" | gh auth login --with-token >/dev/null
          gh api "repos/${TARGET}/dispatches" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --input payload.json \
            -X POST \
            --silent \
            --verbose |& sed -n '1p'  # prints first status line from gh's curl
